;; Analyzed by ClojureScript 1.9.14
{:use-macros {maybe datatype-expansion.utils-macros}, :excludes #{}, :name datatype-expansion.expanded-form, :imports nil, :requires {clojure.string clojure.string, datatype-expansion.utils datatype-expansion.utils, insta instaparse.core, instaparse.core instaparse.core, clojure.walk clojure.walk}, :uses {clear-node datatype-expansion.utils, stringify-keys clojure.walk, error datatype-expansion.utils}, :defs {raml-grammar {:name datatype-expansion.expanded-form/raml-grammar, :file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/src/clj/datatype_expansion/expanded_form.cljc", :line 14, :column 1, :end-line 14, :end-column 18, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/src/clj/datatype_expansion/expanded_form.cljc", :line 14, :column 6, :end-line 14, :end-column 18}}, expanded-form {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/src/clj/datatype_expansion/expanded_form.cljc", :line 105, :column 7, :end-line 105, :end-column 20, :arglists (quote ([type-node context]))}, :name datatype-expansion.expanded-form/expanded-form, :variadic false, :file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/src/clj/datatype_expansion/expanded_form.cljc", :end-column 20, :method-params ([type-node context]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 2, :fn-var true, :arglists (quote ([type-node context]))}, process-items {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/src/clj/datatype_expansion/expanded_form.cljc", :line 93, :column 7, :end-line 93, :end-column 20, :arglists (quote ([node context]))}, :name datatype-expansion.expanded-form/process-items, :variadic false, :file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/src/clj/datatype_expansion/expanded_form.cljc", :end-column 20, :method-params ([node context]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 2, :fn-var true, :arglists (quote ([node context]))}, check-required {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/src/clj/datatype_expansion/expanded_form.cljc", :line 86, :column 7, :end-line 86, :end-column 21, :arglists (quote ([{:keys [properties], :as object}]))}, :name datatype-expansion.expanded-form/check-required, :variadic false, :file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/src/clj/datatype_expansion/expanded_form.cljc", :end-column 21, :method-params ([p__16861]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [properties], :as object}]))}, raml-type-grammar-analyser {:name datatype-expansion.expanded-form/raml-type-grammar-analyser, :file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/src/clj/datatype_expansion/expanded_form.cljc", :line 22, :column 1, :end-line 22, :end-column 32, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/src/clj/datatype_expansion/expanded_form.cljc", :line 22, :column 6, :end-line 22, :end-column 32}}, xml-type? {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/src/clj/datatype_expansion/expanded_form.cljc", :line 82, :column 8, :end-line 82, :end-column 17, :private true, :arglists (quote ([type]))}, :private true, :name datatype-expansion.expanded-form/xml-type?, :variadic false, :file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/src/clj/datatype_expansion/expanded_form.cljc", :end-column 17, :method-params ([type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 1, :fn-var true, :arglists (quote ([type]))}, json-type? {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/src/clj/datatype_expansion/expanded_form.cljc", :line 84, :column 8, :end-line 84, :end-column 18, :private true, :arglists (quote ([type]))}, :private true, :name datatype-expansion.expanded-form/json-type?, :variadic false, :file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/src/clj/datatype_expansion/expanded_form.cljc", :end-column 18, :method-params ([type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 1, :fn-var true, :arglists (quote ([type]))}, process-constraints {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/src/clj/datatype_expansion/expanded_form.cljc", :line 58, :column 8, :end-line 58, :end-column 27, :private true, :arglists (quote ([parsed-type type-node]))}, :private true, :name datatype-expansion.expanded-form/process-constraints, :variadic false, :file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/src/clj/datatype_expansion/expanded_form.cljc", :end-column 27, :method-params ([parsed-type type-node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 2, :fn-var true, :arglists (quote ([parsed-type type-node]))}, atomic-types {:name datatype-expansion.expanded-form/atomic-types, :file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/src/clj/datatype_expansion/expanded_form.cljc", :line 55, :column 1, :end-line 55, :end-column 18, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/src/clj/datatype_expansion/expanded_form.cljc", :line 55, :column 6, :end-line 55, :end-column 18}}, ast->type {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/src/clj/datatype_expansion/expanded_form.cljc", :line 24, :column 7, :end-line 24, :end-column 16, :arglists (quote ([ast context]))}, :name datatype-expansion.expanded-form/ast->type, :variadic false, :file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/src/clj/datatype_expansion/expanded_form.cljc", :end-column 16, :method-params ([ast context]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ast context]))}, process-properties {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/src/clj/datatype_expansion/expanded_form.cljc", :line 98, :column 7, :end-line 98, :end-column 25, :arglists (quote ([node context]))}, :name datatype-expansion.expanded-form/process-properties, :variadic false, :file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/src/clj/datatype_expansion/expanded_form.cljc", :end-column 25, :method-params ([node context]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 2, :fn-var true, :arglists (quote ([node context]))}, parse-type-expression {:protocol-inline nil, :meta {:file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/src/clj/datatype_expansion/expanded_form.cljc", :line 47, :column 7, :end-line 47, :end-column 28, :arglists (quote ([exp context]))}, :name datatype-expansion.expanded-form/parse-type-expression, :variadic false, :file "/Users/christianmule/projects/raml/raml-parser-toolbelt/tools/datatype-expansion/src/clj/datatype_expansion/expanded_form.cljc", :end-column 28, :method-params ([exp context]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists (quote ([exp context]))}}, :require-macros {datatype-expansion.utils-macros datatype-expansion.utils-macros}, :cljs.analyzer/constants {:seen #{:discriminatorValue :properties :additionalProperties :schema :format :multipleOf :maxProperties :uniqueItems :else :ARRAY_TYPE :content :maximum :type :UNION_TYPE :TYPE_NAME :minLength :minProperties :minimum :minItems :enumValues :SCALAR_TYPE :maxLength :TYPE_EXPRESSION :items :of :required :discriminator :maxItems :pattern}, :order [:TYPE_EXPRESSION :UNION_TYPE :type :of :SCALAR_TYPE :ARRAY_TYPE :items :TYPE_NAME :else :required :minProperties :maxProperties :discriminator :discriminatorValue :minLength :maxLength :minimum :maximum :format :multipleOf :pattern :uniqueItems :minItems :maxItems :enumValues :additionalProperties :properties :schema :content]}, :doc nil}